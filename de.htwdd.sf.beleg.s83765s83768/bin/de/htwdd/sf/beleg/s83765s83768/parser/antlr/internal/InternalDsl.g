/*
 * generated by Xtext 2.35.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.htwdd.sf.beleg.s83765s83768.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.htwdd.sf.beleg.s83765s83768.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.htwdd.sf.beleg.s83765s83768.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;

    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getStoriesStoryParserRuleCall_0());
			}
			lv_stories_0_0=ruleStory
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"stories",
					lv_stories_0_0,
					"de.htwdd.sf.beleg.s83765s83768.Dsl.Story");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleStory
entryRuleStory returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoryRule()); }
	iv_ruleStory=ruleStory
	{ $current=$iv_ruleStory.current; }
	EOF;

// Rule Story
ruleStory returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStoryAccess().getTitleTitleParserRuleCall_0_0());
				}
				lv_title_0_0=ruleTitle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoryRule());
					}
					set(
						$current,
						"title",
						lv_title_0_0,
						"de.htwdd.sf.beleg.s83765s83768.Dsl.Title");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_dp_1_0=RULE_DOPPELPUNKT
				{
					newLeafNode(lv_dp_1_0, grammarAccess.getStoryAccess().getDpDOPPELPUNKTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStoryRule());
					}
					setWithLastConsumed(
						$current,
						"dp",
						lv_dp_1_0,
						"de.htwdd.sf.beleg.s83765s83768.Dsl.DOPPELPUNKT");
				}
			)
		)
		otherlv_2='Um'
		{
			newLeafNode(otherlv_2, grammarAccess.getStoryAccess().getUmKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStoryAccess().getBenefitBenefitParserRuleCall_3_0());
				}
				lv_benefit_3_0=ruleBenefit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoryRule());
					}
					set(
						$current,
						"benefit",
						lv_benefit_3_0,
						"de.htwdd.sf.beleg.s83765s83768.Dsl.Benefit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='m\u00F6chte'
		{
			newLeafNode(otherlv_4, grammarAccess.getStoryAccess().getMÃ¶chteKeyword_4());
		}
		otherlv_5='ich'
		{
			newLeafNode(otherlv_5, grammarAccess.getStoryAccess().getIchKeyword_5());
		}
		otherlv_6='als'
		{
			newLeafNode(otherlv_6, grammarAccess.getStoryAccess().getAlsKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStoryAccess().getRoleRoleParserRuleCall_7_0());
				}
				lv_role_7_0=ruleRole
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoryRule());
					}
					set(
						$current,
						"role",
						lv_role_7_0,
						"de.htwdd.sf.beleg.s83765s83768.Dsl.Role");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStoryAccess().getActionActionParserRuleCall_8_0());
				}
				lv_action_8_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoryRule());
					}
					set(
						$current,
						"action",
						lv_action_8_0,
						"de.htwdd.sf.beleg.s83765s83768.Dsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='.'
		{
			newLeafNode(otherlv_9, grammarAccess.getStoryAccess().getFullStopKeyword_9());
		}
	)
;

// Entry rule entryRuleTitle
entryRuleTitle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTitleRule()); }
	iv_ruleTitle=ruleTitle
	{ $current=$iv_ruleTitle.current; }
	EOF;

// Rule Title
ruleTitle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_noun_0_0=RULE_NOUN
				{
					newLeafNode(lv_noun_0_0, grammarAccess.getTitleAccess().getNounNOUNTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTitleRule());
					}
					setWithLastConsumed(
						$current,
						"noun",
						lv_noun_0_0,
						"de.htwdd.sf.beleg.s83765s83768.Dsl.NOUN");
				}
			)
		)
		(
			(
				lv_verb_1_0=RULE_VERB_INFINTIV
				{
					newLeafNode(lv_verb_1_0, grammarAccess.getTitleAccess().getVerbVERB_INFINTIVTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTitleRule());
					}
					setWithLastConsumed(
						$current,
						"verb",
						lv_verb_1_0,
						"de.htwdd.sf.beleg.s83765s83768.Dsl.VERB_INFINTIV");
				}
			)
		)
	)
;

// Entry rule entryRuleBenefit
entryRuleBenefit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBenefitRule()); }
	iv_ruleBenefit=ruleBenefit
	{ $current=$iv_ruleBenefit.current; }
	EOF;

// Rule Benefit
ruleBenefit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_noun_0_0=RULE_NOUN
				{
					newLeafNode(lv_noun_0_0, grammarAccess.getBenefitAccess().getNounNOUNTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBenefitRule());
					}
					setWithLastConsumed(
						$current,
						"noun",
						lv_noun_0_0,
						"de.htwdd.sf.beleg.s83765s83768.Dsl.NOUN");
				}
			)
		)
		(
			(
				lv_pzvi_1_0=RULE_PREFIX_ZU_VERB_INFINTIV
				{
					newLeafNode(lv_pzvi_1_0, grammarAccess.getBenefitAccess().getPzviPREFIX_ZU_VERB_INFINTIVTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBenefitRule());
					}
					setWithLastConsumed(
						$current,
						"pzvi",
						lv_pzvi_1_0,
						"de.htwdd.sf.beleg.s83765s83768.Dsl.PREFIX_ZU_VERB_INFINTIV");
				}
			)
		)
	)
;

// Entry rule entryRuleRole
entryRuleRole returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoleRule()); }
	iv_ruleRole=ruleRole
	{ $current=$iv_ruleRole.current; }
	EOF;

// Rule Role
ruleRole returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_noun_0_0=RULE_NOUN
			{
				newLeafNode(lv_noun_0_0, grammarAccess.getRoleAccess().getNounNOUNTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRoleRule());
				}
				setWithLastConsumed(
					$current,
					"noun",
					lv_noun_0_0,
					"de.htwdd.sf.beleg.s83765s83768.Dsl.NOUN");
			}
		)
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_noun_0_0=RULE_NOUN
				{
					newLeafNode(lv_noun_0_0, grammarAccess.getActionAccess().getNounNOUNTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"noun",
						lv_noun_0_0,
						"de.htwdd.sf.beleg.s83765s83768.Dsl.NOUN");
				}
			)
		)
		(
			(
				lv_vi_1_0=RULE_VERB_INFINTIV
				{
					newLeafNode(lv_vi_1_0, grammarAccess.getActionAccess().getViVERB_INFINTIVTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"vi",
						lv_vi_1_0,
						"de.htwdd.sf.beleg.s83765s83768.Dsl.VERB_INFINTIV");
				}
			)
		)
	)
;

RULE_NOUN : ('A'..'Z'|'\u00C4'|'\u00D6'|'\u00DC') ('a'..'z'|'\u00E4'|'\u00F6'|'\u00FC')*;

RULE_PREFIX_ZU_VERB_INFINTIV : ('a'..'z'|'\u00E4'|'\u00F6'|'\u00FC')* 'zu' ('a'..'y'|'\u00E4'|'\u00F6'|'\u00FC'|'z' ('a'..'t'|'v'..'y'|'\u00E4'|'\u00F6'|'\u00FC'))* 'en' ',';

RULE_VERB_INFINTIV : ('a'..'y'|'\u00E4'|'\u00F6'|'\u00FC'|'z' ('a'..'t'|'v'..'y'|'\u00E4'|'\u00F6'|'\u00FC'))+ 'z'* 'en';

RULE_DOPPELPUNKT : ':';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
