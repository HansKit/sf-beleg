/**
 * generated by Xtext 2.34.0
 */
package de.htwdd.sf.beleg.s83765s83768.generator;

import de.htwdd.sf.beleg.s83765s83768.dsl.Model;
import de.htwdd.sf.beleg.s83765s83768.dsl.Story;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;

@SuppressWarnings("all")
public class DslGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _get = resource.getContents().get(0);
    final Model model = ((Model) _get);
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
    _builder.newLine();
    _builder.append("<stories>");
    _builder.newLine();
    {
      EList<Story> _stories = model.getStories();
      for(final Story story : _stories) {
        _builder.append("    ");
        _builder.append("<story>");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("<title>");
        String _noun = story.getTitle().getNoun();
        _builder.append(_noun, "        ");
        _builder.append(" ");
        String _verb = story.getTitle().getVerb();
        _builder.append(_verb, "        ");
        _builder.append("</title>");
        _builder.newLineIfNotEmpty();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("<benefit>");
        String _noun_1 = story.getBenefit().getNoun();
        _builder.append(_noun_1, "        ");
        _builder.append(" ");
        String _xifexpression = null;
        boolean _startsWith = story.getBenefit().getPzvi().startsWith("zu");
        if (_startsWith) {
          _xifexpression = story.getBenefit().getPzvi().replaceFirst("zu", "端端").replace("zu", "").replaceFirst("端端", "zu");
        } else {
          _xifexpression = story.getBenefit().getPzvi().replace("zu", "");
        }
        _builder.append(_xifexpression, "        ");
        _builder.append("</benefit>");
        _builder.newLineIfNotEmpty();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("<role>");
        String _noun_2 = story.getRole().getNoun();
        _builder.append(_noun_2, "        ");
        _builder.append("</role>");
        _builder.newLineIfNotEmpty();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("<action>");
        String _noun_3 = story.getAction().getNoun();
        _builder.append(_noun_3, "        ");
        _builder.append(" ");
        String _vi = story.getAction().getVi();
        _builder.append(_vi, "        ");
        _builder.append("</action>");
        _builder.newLineIfNotEmpty();
        _builder.append("    ");
        _builder.append("</story>");
        _builder.newLine();
      }
    }
    _builder.append("</stories>");
    _builder.newLine();
    final String xmlContent = _builder.toString();
    fsa.generateFile("s83765s83768.xml", xmlContent);
  }
}
